pnorm(3.6, mean = 4.43, sd = 1.32, log = FALSE)
z1<-(3.6-4.43)/1.32
pnorm(z1)
.5-pnorm(z1)
pnorm(2.17)
qnorm(2.17)
pnorm(-2.17)
(78-68.2)/10.4
1-(78-68.2)/10.4
x<-1-(78-68.2)/10.4
dbinom(20, 75, X, log = FALSE)
x<-1-(78-68.2)/10.4
dbinom(20, 75, X, log = FALSE)
dbinom(20, 75, x, log = FALSE)
pnorm(x)
qnorm(x)
pnorm(x)
prob<-pnorm(x)
dbinom(20, 75, prob, log = FALSE)
x< -1-((78-68.2)/10.4)
x< ((78-68.2)/10.4)
x<- ((78-68.2)/10.4)
prob<-pnorm(x)
dbinom(20, 75, prob, log = FALSE)
pbinom(20, 75, prob, log = FALSE)
qbinom(20, 75, prob, log = FALSE)
dbinom(20, 75, prob, log = FALSE)
dbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
dbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
pbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
x<- ((78-68.2)/10.4)
prob<-pnorm(x)
x<- 1-((78-68.2)/10.4)
prob<-pnorm(x)
x<- 1-((78-68.2)/10.4)
prob<-pnorm(x)
pbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
prob<-qnorm(x)
pbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
x<- .5-((78-68.2)/10.4)
prob<-qnorm(x)
x<- abs(.5-((78-68.2)/10.4))
prob<-qnorm(x)
pbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
prob<-abs(qnorm(x))
pbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
prob<-abs(pnorm(x))
pbinom(20, 75, prob, log = FALSE, lower.tail = FALSE)
pbinom(19, 75, prob, log = FALSE, lower.tail = FALSE)
prob<-abs(qnorm(x))
pbinom(19, 75, prob, log = FALSE, lower.tail = FALSE)
x<- abs(((78-68.2)/10.4))
x<- 1-abs(((78-68.2)/10.4))
prob<-abs(qnorm(x))
prob<-abs(pnorm(x))
pbinom(19, 75, prob, log = FALSE, lower.tail = FALSE)
prob<-abs(qnorm(x))
prob<-abs(pnorm(x))
pbinom(19, 75, prob, log = FALSE, lower.tail = FALSE)
n1<-400
n2<-480
n1<-400
n2<-480
x1<-48
x2<-187
p1<-x1/n1
p2<-x2/n2
prop.test(x=c(480,187), n=c(400,480), correct=FALSE)
prop.test(x=c(48,187), n=c(400,480), correct=FALSE)
prop.test(x=c(48,187), n=c(400,480), correct=FALSE, conf.level = .98)
prop.test(x=c(x1,x2), n=c(n1,n2), correct=FALSE, conf.level = .98)
n1<-85
n2<-90
x1<-38
x2<-23
prop.test(x=c(x1,x2), n=c(n1,n2), correct=FALSE, conf.level = .98)
prop.test(x=c(x1,x2), n=c(n1,n2), correct=FALSE, conf.level = .99)
prop.test(x=c(x1,x2), n=c(n1,n2), alternative = "greater", correct=FALSE, conf.level = .99, )
n1<-50
n2<-60
x1<-15
x2<-23
p1<-x1/n1
p2<-x2/n2
prop.test(x=c(x1,x2), n=c(n1,n2), correct=FALSE, conf.level = .90)
bolt_bus <- read.csv(file.path("C:/Users/00811289/Desktop/Bus_EDA","bb-fares-8jun.csv"), sep=",")
summary(bolt_bus)
hist(bolt_bus$fare, prob=T, ylim=c(0.0,0.5))
hist(bolt_bus$fare, ylim=c(0.0,0.5))
hist(bolt_bus$fare, ylim=c(0.0,30))
install.packages("ggplot2")
install.packages("rgdal")
install.packages("scales")
install.packages("ggmap")
install.packages("dplyr")
install.packages("Cairo")
tract <- readOGR(dsn = ".", layer = "gz_2010_13_140_00_500k")
tract <- fortify(tract, region="GEO_ID")
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state")
tract <- readShapePoly(dsn = ".", layer = "tl_2014_us_state")
require("ggplot2")
require("rgdal")
require("scales")
require("ggmap")
require("dplyr")
require("Cairo")
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state")
tract <- readShapePoly(dsn = ".", layer = "tl_2014_us_state")
require("ggplot2")
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state")
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state.shp")
library)"rgdal"
library("rgdal")
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state")
tract <- readOGR(layer = "tl_2014_us_state")
library(maptools)
library("maptools")
install.packages("maptools")
library("maptools")
tract <- readOGR(layer = "tl_2014_us_state")
tract <- fortify(tract, region="GEO_ID")
tract <- readOGR(".",layer = "tl_2014_us_state")
require("dplyr")
help("rgdal")
??rgdal
require("rgdal")
install.packages("sp")
require("sp")
?install.packages
install.packages('sp_1.1-1.zip')
install.packages('/sp_1.1-1.zip')
install.packages('C:/Users/00811289/Desktop/r_map/sp_1.1-1.zip')
\
install.packages('C:\Users\00811289\Desktop\r_map\sp_1.1-1.zip')
install.packages('C:\\Users\00811289\Desktop\r_map\sp_1.1-1.zip')
install.packages('C://Users/00811289/Desktop/r_map/sp_1.1-1.zip')
install.packages('./sp_1.1-1.zip')
install.packages('./sp_1.1-1.zip',repo=NULL, type="source")
install.packages('C:\\Users\00811289\Desktop\r_map\/sp_1.1-1.zip',repo=NULL, type="source")
install.packages('C:\\Users\00811289\Desktop\r_map\sp_1.1-1.zip',repo=NULL, type="source")
install.packages('C://Users/00811289/Desktop/r_map/sp_1.1-1.zip',repo=NULL, type="source")
require("sp")
require("ggplot2")
require("rgdal")
require("scales")
require("ggmap")
require("dplyr")
require("Cairo")
library("rgdal")
tract <- readOGR(".",layer = "tl_2014_us_state")
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state")
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state.shp")
?readOGR
tract <- readOGR(dsn = ".", layer = "tl_2014_us_state")
tract <- readOGR(dsn = "C:/Users/00811289/Desktop/r_map", layer = "tl_2014_us_state")
tract <- fortify(tract, region="GEO_ID")
tract <- fortify(tract, region="GEOID")
install.packages('C://Users/00811289/Desktop/r_map/gpclib_1.5-5.tar.gz',repo=NULL, type="source")
?install.packages
install.packages('C://Users/00811289/Desktop/r_map/gpclib_1.5-5.tar.gz',repo=NULL)
, type="source"
install.packages('C://Users/00811289/Desktop/r_map/gpclib_1.5-5.tar.gz',repo=NULL, type="source")
install.packages("gpclib")
install.packages('C://Users/00811289/Desktop/r_map/gpclib',repo=NULL, type="source")
sessioninfo()
r.version()
R.version()
R.version
install.packages('C://Users/00811289/Desktop/r_map/gpclib_1.5-5.tar.gz',repo=NULL, type="source")
R CMD INSTALL --build gpclib_1.5-5.tar.gz
INSTALL --build gpclib_1.5-5.tar.gz
R.version
install.packages("rgeos")
require("rgeos")
require("rgeos")
tract <- readOGR(dsn = "C:/Users/00811289/Desktop/r_map", layer = "tl_2014_us_state")
tract <- fortify(tract, region="GEOID")
require("sp")
require("ggplot2")
require("rgeos")
require("rgdal")
require("scales")
require("ggmap")
require("dplyr")
require("Cairo")
library("rgdal")
library("maptools")
tract <- fortify(tract, region="GEOID")
require("maptools")
tract <- fortify(tract, region="GEOID")
key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library(httr)
URL <- "http://api.nal.usda.gov/ndb/reports/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key)
install.packages("httr")
install.packages(httr)
key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library(httr)
URL <- "http://api.nal.usda.gov/ndb/reports/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key)
install.packages("httr")
key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/reports/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key)
# import all available data for NDSU
#ndsu_req <- GET(URL, query = list(api_key = edu_key)
install.packages("httr")
install.packages("httr")
key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/reports/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key)
View(salaries)
View(x)
ndsu_data <- content(ndsu_req)
ndsu_req <- GET(URL, query = list(api_key = edu_key)
ndsu_data <- content(ndsu_req)
ndsu_req <- GET(URL, query = list(api_key = edu_key)
v
ndsu_req <- GET(URL, query = list(api_key = edu_key))
edu_key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/reports/?"
ndsu_req <- GET(URL, query = list(api_key = edu_key))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
edu_key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/reports?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
edu_key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/reports?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
URL <- "http://api.nal.usda.gov/ndb/reports/"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
URL <- "http://api.nal.usda.gov/ndb/list?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
names(ndsu_data$name)
edu_key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/nutrients/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
edu_key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/nutrients/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key, nutrients ="204"))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
edu_key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/reports/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key, nutrients ="204"))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
edu_key <- "P0YxrofLI0ydkKOy7b3jFTi6o80yFvyKnpsrCl9l"
library("httr")
URL <- "http://api.nal.usda.gov/ndb/nutrients/?"
# import all available data for NDSU
ndsu_req <- GET(URL, query = list(api_key = edu_key, nutrients ="205"))
ndsu_data <- content(ndsu_req)
names(ndsu_data)
setwd("C:/Users/00811289/Desktop/insurance")
train <- read.csv("C:/Users/00811289/Desktop/insurance/logit_insurance.csv")
tree.1 <- rpart(INCOME~AGE+YOJ+HOMEVAL+JOB,data=train,method="anova",control=rpart.control(minsplit=30,cp=0,maxsurrogate=0,maxdepth=5))
library(rpart)
tree.1 <- rpart(INCOME~AGE+YOJ+HOMEVAL+JOB,data=train,method="anova",control=rpart.control(minsplit=30,cp=0,maxsurrogate=0,maxdepth=5))
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL+JOB,data=train,method="anova",control=rpart.control(minsplit=30,cp=0,maxsurrogate=0,maxdepth=5))
printcp(tree.1)
print(tree.1)
plot(tree.1)
text(tree.1)
View(train)
View(train)
tree.1 <- rpart(INCOME~AGE+YOJ+JOB,data=train,method="anova",control=rpart.control(minsplit=30,cp=0,maxsurrogate=0,maxdepth=5))
plot(tree.1)
text(tree.1)
tree.1 <- rpart(INCOME~AGE+YOJ+TIF,data=train,method="anova",control=rpart.control(minsplit=30,cp=0,maxsurrogate=0,maxdepth=5))
plot(tree.1)
text(tree.1)
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL,data=train,method="anova",control=rpart.control(minsplit=30,cp=0,maxsurrogate=0,maxdepth=5))
plot(tree.1)
text(tree.1)
fancyRpartPlot(tree.1)
library(fancyRpartPlot)
library(party)
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(randomForest)
install.packages('randomForest')
library(randomForest)
install.packages('party')
fancyRpartPlot(tree.1)
plot(tree.1)
text(tree.1)
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL,data=train,method="anova",control=rpart.control(minsplit=30,cp=0,maxsurrogate=0,maxdepth=20))
plot(tree.1)
text(tree.1)
print(tree.1)
printcp(tree.1)
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=20))
plot(tree.1)
text(tree.1)
plot(tree.1)
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=10))
plot(tree.1)
text(tree.1)
??text
??text()
??rpart
??rpart
text(tree.1, cex = 0.5)
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=10))
plot(tree.1)
text(tree.1, cex = 0.5)
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=20))
plot(tree.1)
text(tree.1, cex = 0.3)
print(tree.1)
tree.1 <- rpart(INCOME~AGE+YOJ+HOME_VAL,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
print(tree.1)
plot(tree.1)
text(tree.1, cex = 0.3)
tree.1 <- rpart(INCOME~JOB,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
plot(tree.1)
text(tree.1, cex = 0.3)
plot(tree.1)
text(tree.1, cex = 0.5)
tree.1 <- rpart(INCOME~JOB+EDUCATION,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
plot(tree.1)
text(tree.1, cex = 0.5)
print(tree.1)
tree.1 <- rpart(INCOME~JOB+EDUCATION+YOJ,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
printcp(tree.1)
plot(tree.1)
text(tree.1, cex = 0.5)
tree.1 <- rpart(INCOME~JOB+EDUCATION+YOJ,data=train,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
plot(tree.1)
text(tree.1, cex = 0.5)
fancyRpartPlot(tree.1)
print(tree.1)
tree.1 <- rpart(JOB~EDUCATION+YOJ,data=train,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
plot(tree.1)
text(tree.1, cex = 0.5)
fancyRpartPlot(tree.1)
tree.1 <- rpart(JOB~EDUCATION+YOJ+CAR_USE+AGE,data=train,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
plot(tree.1)
text(tree.1, cex = 0.5)
fancyRpartPlot(tree.1)
train_complete <- train[complete.cases(train),]
tree.1 <- rpart(JOB~EDUCATION+YOJ+CAR_USE+AGE,data=train_complete,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
plot(tree.1)
text(tree.1, cex = 0.5)
fancyRpartPlot(tree.1)
tree.1 <- rpart(JOB~EDUCATION+YOJ+CAR_USE+AGE,data=train_complete,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
ddply(train_complete, .(a, b), summarise, xmean=mean(x), ymean=mean(y), yvar=var(y))
summary(train_complete$JOB)
foo <- read.table(train_complete, na.strings=c("", "NA"))
foo <- read.table(file="C:/Users/00811289/Desktop/insurance/logit_insurance.csv", na.strings=c("", "NA"))
train_complete[JOB==""] <- NA
train_complete[train_complete$JOB==""] <- NA
train_complete[train_complete==""] <- NA
train_complete <- na.omit(train_complete)
summary(train_complete$JOB)
tree.1 <- rpart(JOB~EDUCATION+YOJ+CAR_USE+AGE,data=train_complete,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
fancyRpartPlot(tree.1)
train_complete_2 <- data.matrix(train_complete)
test<-as.numeric(sub('$','',as.character(train_complete$INCOME),fixed=TRUE))
print(test)
convertCurrency <- function(currency) {
currency1 <- sub('$','',as.character(currency),fixed=TRUE)
currency2 <- as.numeric(gsub('\\,','',as.character(currency1)))
currency2
}
train_complete$INCOME <- convertCurrency(train_complete$INCOME)
tree.1 <- rpart(JOB~EDUCATION+YOJ+CAR_USE+AGE+INCOME,data=train_complete,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
fancyRpartPlot(tree.1)
tree.1 <- rpart(JOB~EDUCATION+YOJ+CAR_USE+AGE+INCOME,data=train_complete,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=4))
fancyRpartPlot(tree.1)
tree.1 <- rpart(JOB~EDUCATION+YOJ+CAR_USE+AGE+INCOME,data=train_complete,method="class",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
fancyRpartPlot(tree.1)
fancyRpartPlot(model, palettes=c("Greys", "Oranges"))
fancyRpartPlot(tree.1, palettes=c("Greys", "Oranges"))
library(RColorBrewer)
fancyRpartPlot(tree.1, palettes=c("Greys", "Oranges"))
fancyRpartPlot(tree.1, palettes="Greys", "Oranges")
fancyRpartPlot(tree.1, palettes="Greys")
fancyRpartPlot(tree.1, palettes=Greys)
fancyRpartPlot(tree.1, main="JOB TREE",palettes=Greys)
fancyRpartPlot(tree.1, main="JOB TREE")
fancyRpartPlot(tree.1, main="JOB TREE",palettes=c("Greys", "Oranges"))
fancyRpartPlot(tree.1)
fancyRpartPlot(tree.1, nn.cex=.6)
fancyRpartPlot(tree.1, palettes=c("Greys", "Oranges"), nn.cex=.6)
fancyRpartPlot(tree.1, nn.cex=.6)
fancyRpartPlot(tree.1, nn.cex=.4)
fancyRpartPlot(tree.1, nn.cex=.6)
fancyRpartPlot(tree.1, nn.cex=NULL, compress=TRUE)
fancyRpartPlot(tree.1, nn.cex=NULL)
fancyRpartPlot(tree.1, nn.cex=NULL, compress=TRUE, ycompress=TRUE)
fancyRpartPlot(tree.1, nn.cex=NULL, compress=TRUE, ycompress=TRUE, uniform =FALSE)
fancyRpartPlot(tree.1, nn.cex=NULL, compress=TRUE, ycompress=TRUE)
fancyRpartPlot(tree.1, nn.cex=1, compress=TRUE, ycompress=TRUE)
fancyRpartPlot(tree.1, nn.cex=1, compress=TRUE, ycompress=FALSE)
fancyRpartPlot(tree.1, nn.cex=1, compress=TRUE, ycompress=TRUE)
fancyRpartPlot(tree.1, nn.cex=1, under.cex=1, compress=TRUE, ycompress=TRUE)
fancyRpartPlot(tree.1, nn.cex=.01, under.cex=1, compress=TRUE, ycompress=TRUE)
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE)
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, box.palette="Grays")
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, round=0)
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow.col=0)
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow.col=0)
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow.col="white")
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow="white")
fancyRpartPlot(tree.1, nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.2,nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, gap=0, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, gap=0.5, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, gap=1, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, gap=5, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, gap=2, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.1, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
printcp(tree.1)
tree.pruned<-prune(tree.1, cp=0.00218866)
fancyRpartPlot(tree.pruned, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.pruned, tweak=1.5,nn.cex=1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(tree.pruned, tweak=1.5,nn.cex=.8, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
train_complete$HOME_VAL <- convertCurrency(train_complete$HOME_VAL)
View(poultry)
View(train_complete)
summary(train_complete$CAR_AGE)
train_complete$BLUEBOOK <- convertCurrency(train_complete$BLUEBOOK)
car_age_tree <- rpart(CAR_AGE~CAR_USE+BLUEBOOK+INCOME+KIDSDRIV+URBANICITY,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
car_age_tree <- rpart(CAR_AGE~CAR_USE+BLUEBOOK+INCOME+KIDSDRIV+URBANICITY,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
car_age_tree <- rpart(CAR_AGE~CAR_USE+BLUEBOOK+INCOME+KIDSDRIV+URBANICITY,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
car_age_tree <- rpart(CAR_AGE~CAR_USE+BLUEBOOK+INCOME,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
car_age_tree <- rpart(CAR_AGE~CAR_USE+YOJ+BLUEBOOK+INCOME,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
car_age_tree <- rpart(CAR_AGE~CAR_USE+YOJ+TIF+BLUEBOOK+INCOME,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
printcp(car_age_tree)
tree.pruned<-prune(car_age_tree, cp=0.00129701)
fancyRpartPlot(car.tree.pruned, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
car.tree.pruned<-prune(car_age_tree, cp=0.00129701)
fancyRpartPlot(car.tree.pruned, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
fancyRpartPlot(car.tree.pruned, tweak=1.5,nn.cex=.1, gap=5, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
printcp(car_age_tree)
car_age_tree <- rpart(CAR_AGE~CAR_USE+YOJ+TIF+BLUEBOOK+INCOME,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
car.tree.pruned<-prune(car_age_tree, cp= 0.00052414)
fancyRpartPlot(car.tree.pruned, tweak=1.5,nn.cex=.1, gap=5, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
printcp(car_age_tree)
car.tree.pruned<-prune(car_age_tree, cp= 0.00774443)
fancyRpartPlot(car.tree.pruned, tweak=1.5,nn.cex=.1, gap=5, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
summary(train_complete$CAR_AGE)
summary(train_complete$HOME_VAL)
car_age_tree <- rpart(HOME_VAL~INCOME,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=5))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
car_age_tree <- rpart(HOME_VAL~INCOME,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
fancyRpartPlot(car_age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
home_val_tree <- rpart(HOME_VAL~INCOME,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
fancyRpartPlot(home_val_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
home_val_tree <- rpart(HOME_VAL~INCOME+MSTATUS+CAR_AGE,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
fancyRpartPlot(home_val_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
printcp(home_val_tree)
home_val.pruned<-prune(home_val_tree, cp= 0.0320154)
fancyRpartPlot(home_val.pruned, tweak=1.5,nn.cex=.1, gap=5, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
summary(train_complete$INCOME)
income_tree <- rpart(INCOME~JOB+AGE+YOJ,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
fancyRpartPlot(income_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
summary(train_complete$AGE)
age_tree <- rpart(AGE~JOB+MSTATUS+REDCAR+EDUCATION+YOJ,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
age_tree <- rpart(AGE~JOB+MSTATUS+RED_CAR+EDUCATION+YOJ,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=3))
fancyRpartPlot(age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
age_tree <- rpart(AGE~JOB+MSTATUS+RED_CAR+EDUCATION+YOJ,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=6))
fancyRpartPlot(age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
age_tree <- rpart(AGE~.,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=4))
fancyRpartPlot(age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
age_tree <- rpart(AGE~EDUCATION+JOB,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=4))
fancyRpartPlot(age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
age_tree <- rpart(AGE~EDUCATION+YOJ,data=train_complete,method="anova",control=rpart.control(minsplit=30,cp=0.0001,maxsurrogate=0,maxdepth=4))
fancyRpartPlot(age_tree, tweak=1.5,nn.cex=.1, gap=3, under.cex=1, compress=TRUE, ycompress=TRUE, shadow=0)
summary(train_complete$YOJ)
