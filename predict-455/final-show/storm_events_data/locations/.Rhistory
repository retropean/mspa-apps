elective_data_frame$PREDICT452_count<-as.integer(1)
elective_data_frame$PREDICT452_count[elective_data_frame$PREDICT452==""]<-as.integer(0)
elective_data_frame$PREDICT453_count<-as.integer(1)
elective_data_frame$PREDICT453_count[elective_data_frame$PREDICT453==""]<-as.integer(0)
elective_data_frame$PREDICT454_count<-as.integer(1)
elective_data_frame$PREDICT454_count[elective_data_frame$PREDICT454==""]<-as.integer(0)
elective_data_frame$PREDICT455_count<-as.integer(1)
elective_data_frame$PREDICT455_count[elective_data_frame$PREDICT455==""]<-as.integer(0)
elective_data_frame$PREDICT456_count<-as.integer(1)
elective_data_frame$PREDICT456_count[elective_data_frame$PREDICT456==""]<-as.integer(0)
elective_data_frame$PREDICT457_count<-as.integer(1)
elective_data_frame$PREDICT457_count[elective_data_frame$PREDICT457==""]<-as.integer(0)
elective_data_frame <- elective_data_frame[,-c(1,8)]
head(elective_data_frame)
elective_data_frame <- valid_survey_input[,c("PREDICT450", "PREDICT451", "PREDICT452", "PREDICT453", "PREDICT454", "PREDICT455", "PREDICT456", "PREDICT457")]
#elective_data_frame
elective_data_frame$PREDICT450_count<-as.integer(1)
elective_data_frame$PREDICT450_count[elective_data_frame$PREDICT450==""]<-as.integer(0)
elective_data_frame$PREDICT451_count<-as.integer(1)
elective_data_frame$PREDICT451_count[elective_data_frame$PREDICT451==""]<-as.integer(0)
elective_data_frame$PREDICT452_count<-as.integer(1)
elective_data_frame$PREDICT452_count[elective_data_frame$PREDICT452==""]<-as.integer(0)
elective_data_frame$PREDICT453_count<-as.integer(1)
elective_data_frame$PREDICT453_count[elective_data_frame$PREDICT453==""]<-as.integer(0)
elective_data_frame$PREDICT454_count<-as.integer(1)
elective_data_frame$PREDICT454_count[elective_data_frame$PREDICT454==""]<-as.integer(0)
elective_data_frame$PREDICT455_count<-as.integer(1)
elective_data_frame$PREDICT455_count[elective_data_frame$PREDICT455==""]<-as.integer(0)
elective_data_frame$PREDICT456_count<-as.integer(1)
elective_data_frame$PREDICT456_count[elective_data_frame$PREDICT456==""]<-as.integer(0)
elective_data_frame$PREDICT457_count<-as.integer(1)
elective_data_frame$PREDICT457_count[elective_data_frame$PREDICT457==""]<-as.integer(0)
head(elective_data_frame)
elective_data_frame <- elective_data_frame[,-c(1,8)]
head(elective_data_frame)
elective_data_frame <- valid_survey_input[,c("PREDICT450", "PREDICT451", "PREDICT452", "PREDICT453", "PREDICT454", "PREDICT455", "PREDICT456", "PREDICT457")]
#elective_data_frame
elective_data_frame$PREDICT450_count<-as.integer(1)
elective_data_frame$PREDICT450_count[elective_data_frame$PREDICT450==""]<-as.integer(0)
elective_data_frame$PREDICT451_count<-as.integer(1)
elective_data_frame$PREDICT451_count[elective_data_frame$PREDICT451==""]<-as.integer(0)
elective_data_frame$PREDICT452_count<-as.integer(1)
elective_data_frame$PREDICT452_count[elective_data_frame$PREDICT452==""]<-as.integer(0)
elective_data_frame$PREDICT453_count<-as.integer(1)
elective_data_frame$PREDICT453_count[elective_data_frame$PREDICT453==""]<-as.integer(0)
elective_data_frame$PREDICT454_count<-as.integer(1)
elective_data_frame$PREDICT454_count[elective_data_frame$PREDICT454==""]<-as.integer(0)
elective_data_frame$PREDICT455_count<-as.integer(1)
elective_data_frame$PREDICT455_count[elective_data_frame$PREDICT455==""]<-as.integer(0)
elective_data_frame$PREDICT456_count<-as.integer(1)
elective_data_frame$PREDICT456_count[elective_data_frame$PREDICT456==""]<-as.integer(0)
elective_data_frame$PREDICT457_count<-as.integer(1)
elective_data_frame$PREDICT457_count[elective_data_frame$PREDICT457==""]<-as.integer(0)
head(elective_data_frame)
elective_data_frame <- elective_data_frame[,c(1,8)]
head(elective_data_frame)
elective_data_frame <- elective_data_frame[,seq(8,9)]
elective_data_frame <- elective_data_frame[,c(seq(8,9))]
elective_data_frame <- valid_survey_input[,c("PREDICT450", "PREDICT451", "PREDICT452", "PREDICT453", "PREDICT454", "PREDICT455", "PREDICT456", "PREDICT457")]
#elective_data_frame
elective_data_frame$PREDICT450_count<-as.integer(1)
elective_data_frame$PREDICT450_count[elective_data_frame$PREDICT450==""]<-as.integer(0)
elective_data_frame$PREDICT451_count<-as.integer(1)
elective_data_frame$PREDICT451_count[elective_data_frame$PREDICT451==""]<-as.integer(0)
elective_data_frame$PREDICT452_count<-as.integer(1)
elective_data_frame$PREDICT452_count[elective_data_frame$PREDICT452==""]<-as.integer(0)
elective_data_frame$PREDICT453_count<-as.integer(1)
elective_data_frame$PREDICT453_count[elective_data_frame$PREDICT453==""]<-as.integer(0)
elective_data_frame$PREDICT454_count<-as.integer(1)
elective_data_frame$PREDICT454_count[elective_data_frame$PREDICT454==""]<-as.integer(0)
elective_data_frame$PREDICT455_count<-as.integer(1)
elective_data_frame$PREDICT455_count[elective_data_frame$PREDICT455==""]<-as.integer(0)
elective_data_frame$PREDICT456_count<-as.integer(1)
elective_data_frame$PREDICT456_count[elective_data_frame$PREDICT456==""]<-as.integer(0)
elective_data_frame$PREDICT457_count<-as.integer(1)
elective_data_frame$PREDICT457_count[elective_data_frame$PREDICT457==""]<-as.integer(0)
head(elective_data_frame)
elective_data_frame <- elective_data_frame[,-c(seq(1,8))]
head(elective_data_frame)
barplot(colSums(elective_data_frame))
colnames(elective_data_frame) <- c("PREDICT450", "PREDICT451", "PREDICT452", "PREDICT453", "PREDICT454", "PREDICT455", "PREDICT456", "PREDICT457")
head(elective_data_frame)
elective_courses <- c("PREDICT450", "PREDICT451", "PREDICT452", "PREDICT453", "PREDICT454", "PREDICT455", "PREDICT456", "PREDICT457")
elective_data_frame <- valid_survey_input[,elective_courses]
#elective_data_frame
elective_data_frame$PREDICT450_count<-as.integer(1)
elective_data_frame$PREDICT450_count[elective_data_frame$PREDICT450==""]<-as.integer(0)
elective_data_frame$PREDICT451_count<-as.integer(1)
elective_data_frame$PREDICT451_count[elective_data_frame$PREDICT451==""]<-as.integer(0)
elective_data_frame$PREDICT452_count<-as.integer(1)
elective_data_frame$PREDICT452_count[elective_data_frame$PREDICT452==""]<-as.integer(0)
elective_data_frame$PREDICT453_count<-as.integer(1)
elective_data_frame$PREDICT453_count[elective_data_frame$PREDICT453==""]<-as.integer(0)
elective_data_frame$PREDICT454_count<-as.integer(1)
elective_data_frame$PREDICT454_count[elective_data_frame$PREDICT454==""]<-as.integer(0)
elective_data_frame$PREDICT455_count<-as.integer(1)
elective_data_frame$PREDICT455_count[elective_data_frame$PREDICT455==""]<-as.integer(0)
elective_data_frame$PREDICT456_count<-as.integer(1)
elective_data_frame$PREDICT456_count[elective_data_frame$PREDICT456==""]<-as.integer(0)
elective_data_frame$PREDICT457_count<-as.integer(1)
elective_data_frame$PREDICT457_count[elective_data_frame$PREDICT457==""]<-as.integer(0)
elective_data_frame <- elective_data_frame[,-c(seq(1,8))]
colnames(elective_data_frame) <- elective_courses
head(elective_data_frame)
barplot(colSums(elective_data_frame))
help("barplot")
barplot(colSums(elective_data_frame), col=HEX_GREEN)
HEX_PURPLE <- "#4E2A84"
barplot(colSums(elective_data_frame), col=HEX_PURPLE)
help(barplot)
barplot(colSums(elective_data_frame), col=HEX_PURPLE, cex.names=1.5)
barplot(colSums(elective_data_frame), col=HEX_PURPLE, cex.names=.75)
??barplot
barplot(colSums(elective_data_frame), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
lattice_plot_object <- histogram(~Terms_to_Graduate | SAS_Courses,
data = plotting_data_frame,
strip = myStripStyleGreyBlack,
col = "darkblue", border = "lightgrey",
type = "percent", xlab = "Expected Number of Terms Before Graduation",
ylab = "Percentage of Students in Group",
breaks = 0:14,
layout = c(1,3),
main = "Expected Number of Terms Before Graduation for SAS Groups")
print(lattice_plot_object)
myStripRectColorsGrey <- c(HEX_GREY, HEX_GREY, HEX_GREY, HEX_GREY, HEX_GREY)
myStripTextColorsBlack <- c(HEX_BLACK, HEX_BLACK, HEX_BLACK, HEX_BLACK, HEX_GREY)
myStripStyleGreyBlack <- function(which.panel, factor.levels, ...) {
panel.rect(0, 0, 1, 1, border = 1,
col = myStripRectColorsGrey[which.panel])
panel.text(x = 0.5, y = 0.5,
col = myStripTextColorsBlack[which.panel],
lab = paste(factor.levels[which.panel]))
}
lattice_plot_object <- histogram(~Terms_to_Graduate | SAS_Courses,
data = plotting_data_frame,
strip = myStripStyleGreyBlack,
col = "darkblue", border = "lightgrey",
type = "percent", xlab = "Expected Number of Terms Before Graduation",
ylab = "Percentage of Students in Group",
breaks = 0:14,
layout = c(1,3),
main = "Expected Number of Terms Before Graduation for SAS Groups")
print(lattice_plot_object)
plotting_data_frame <-
working_survey_input[, c("Terms_to_Graduate", "SAS_Courses")]
plotting_data_frame$SAS_Courses <-
factor(plotting_data_frame$SAS_Courses,
levels = c(0, 1, 2),
labels = c("No SAS Courses", "PREDICT 410 Only", "PREDICT 410/411"))
# set up function for lattice panels for up to five groups
# use special colors for the panel rectangles and text for group labels
myStripRectColorsGrey <- c(HEX_GREY, HEX_GREY, HEX_GREY, HEX_GREY, HEX_GREY)
myStripTextColorsBlack <- c(HEX_BLACK, HEX_BLACK, HEX_BLACK, HEX_BLACK, HEX_GREY)
myStripStyleGreyBlack <- function(which.panel, factor.levels, ...) {
panel.rect(0, 0, 1, 1, border = 1,
col = myStripRectColorsGrey[which.panel])
panel.text(x = 0.5, y = 0.5,
col = myStripTextColorsBlack[which.panel],
lab = paste(factor.levels[which.panel]))
}
lattice_plot_object <- histogram(~Terms_to_Graduate | SAS_Courses,
data = plotting_data_frame,
strip = myStripStyleGreyBlack,
col = "darkblue", border = "lightgrey",
type = "percent", xlab = "Expected Number of Terms Before Graduation",
ylab = "Percentage of Students in Group",
breaks = 0:14,
layout = c(1,3),
main = "Expected Number of Terms Before Graduation for SAS Groups")
print(lattice_plot_object)
library(lattice)
library(ggplot2)
library(reshape2)
# set up hash fuctions similar to Python dictionary data structure
library(hash)
# user-defined function useful for data visualization
# helps with review of correlation matrices
source("C:/Users/00811289/Desktop/mspa_software_survey_case/code_correlation_heat_map.R")
plotting_data_frame$SAS_Courses <-
factor(plotting_data_frame$SAS_Courses,
levels = c(0, 1, 2),
labels = c("No SAS Courses", "PREDICT 410 Only", "PREDICT 410/411"))
popular_electives <- histogram(~Terms_to_Graduate | SAS_Courses,
data = plotting_data_frame,
strip = myStripStyleGreyBlack,
col = "darkblue", border = "lightgrey",
type = "percent", xlab = "Electives by Completion",
ylab = "Percentage of Students in Group",
breaks = 0:14,
layout = c(1,3),
main = "Expected Number of Terms Before Graduation for SAS Groups")
print(lattice_plot_object)
head(working_survey_input)
elective_courses <- c("Python_Course_Interest", "Foundations_DE_Course_Interest", "Analytics_App_Course_Interest", "Systems_Analysis_Course_Interest")
new_courses <- c("Python_Course_Interest", "Foundations_DE_Course_Interest", "Analytics_App_Course_Interest", "Systems_Analysis_Course_Interest")
new_courses_data_frame <- valid_survey_input[,new_courses]
new_courses_data_frame
barplot(colSums(new_courses_data_frame), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
head(new_courses_data_frame)
head(elective_data_frame)
??barplot
barplot(colSums(new_courses_data_frame), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", xlim=50000)
barplot(colSums(new_courses_data_frame), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
barplot(colSums(new_courses_data_frame), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=50000)
barplot(colSums(new_courses_data_frame), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=500)
barplot(colSums(new_courses_data_frame), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", na.rm=TRUE)
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
head(valid_survey_input)
new_courses_data_frame <- working[,new_courses]
new_courses_data_frame <- working_survey_input[,new_courses]
head(new_courses_data_frame)
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
head(working_survey_input)
# Show which new courses are preferred
new_courses <- c("Python_Course_Interest", "Foundations_DE_Course_Interest", "Analytics_App_Course_Interest", "Systems_Analysis_Course_Interest", "Java", "JavaScript", "Python", "R", "SAS")
new_courses_data_frame <- working_survey_input[,new_courses]
head(new_courses_data_frame)
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
new_courses <- c("Python_Course_Interest", "Foundations_DE_Course_Interest", "Analytics_App_Course_Interest", "Systems_Analysis_Course_Interest")
new_courses_data_frame <- working_survey_input[,new_courses]
head(new_courses_data_frame)
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
new_courses_data_frame <- new_courses_data_frame/100
head(new_courses_data_frame)
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim = 300)
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses")
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(300,0))
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(0,300))
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(0,200))
# Show which new courses are preferred
new_courses <- c("Python_Course_Interest", "Foundations_DE_Course_Interest", "Analytics_App_Course_Interest", "Systems_Analysis_Course_Interest")
new_courses_data_frame <- working_survey_input[,new_courses]
head(new_courses_data_frame)
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(0,200))
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(0,2000))
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(0,20000))
colnames(elective_data_frame) <- c("Python", "Foundations", "Analytics App", "Systems Analysis")
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(0,20000))
new_courses <- c("Python_Course_Interest", "Foundations_DE_Course_Interest", "Analytics_App_Course_Interest", "Systems_Analysis_Course_Interest")
new_courses_data_frame <- working_survey_input[,new_courses]
head(new_courses_data_frame)
colnames(new_courses_data_frame) <- c("Python", "Foundations", "Analytics App", "Systems Analysis")
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="Elective Courses", ylim=c(0,20000))
barplot(colSums(new_courses_data_frame, na.rm=TRUE), col=HEX_PURPLE, cex.names=.75, main="New Course Preferences", ylim=c(0,20000))
mean(working_survey_input$Courses_Completed)
help(mean)
mean(working_survey_input$Courses_Completed,na.rm=TRUE)
# Chart of Language Preference by time in program
head(working_survey_input)
plot(working_survey_input,type = "o", col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
help(plot)
plot(working_survey_input,type = "l", col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
preferences_time <- c("Courses_Completed", "Java", "JavaScript", "Python", "R", "SAS")
head(working_survey_input)
preferences_time <- c("Courses_Completed", "Java", "JavaScript", "Python", "R", "SAS")
preferences_time_data_frame <- working_survey_input[,preferences_time]
head(preferences_time_data_frame)
xrange <- range(preferences_time_data_frame$Courses_Completed)
help(ranger)
help(range)
y_range <- range(preferences_time_data_frame[,1:5])
y_range
y_range <- range(preferences_time_data_frame[,1:5], na.rm=TRUE)
y_range
x_range <- range(preferences_time_data_frame$Courses_Completed, na.rm=TRUE)
y_range <- range(preferences_time_data_frame[,1:5], na.rm=TRUE)
y_range
plot(x_range, y_range, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
head(preferences_time_data_frame)
plot(preferences_time_data_frame$Java, type="o")
help(plot)
plot(preferences_time_data_frame$Java, y=Courses_Completed,type="o")
plot(preferences_time_data_frame$Java, y=preferences_time_data_frame$Courses_Completed,type="o")
plot(x=preferences_time_data_frame$Courses_Completed, y= preferences_time_data_frame$Java,type="o")
plot(x=preferences_time_data_frame$Courses_Completed, y= mean(preferences_time_data_frame$Java),type="o")
head(preferences_time_data_frame)
help(melt)
cast(preferences_time_data_frame, Courses_Completed ~ Java)
library(reshape2)
cast(preferences_time_data_frame, Courses_Completed ~ Java)
install.packages("reshape")
library(reshape)
cast(preferences_time_data_frame, Courses_Completed ~ Java)
help("melt")
melt(preferences_time_data_frame)
dcast(preferences_time_data_frame, Courses_Completed ~ variable, mean)
dcast(preferences_time_data_frame, preferences_time_data_frame$Courses_Completed ~ variable, mean)
dcast(preferences_time_data_frame, preferences_time_data_frame$Courses_Completed ~ ., mean)
dcast(preferences_time_data_frame, preferences_time_data_frame$Courses_Completed ~ , mean)
dcast(preferences_time_data_frame, preferences_time_data_frame$Courses_Completed ~preferences_time_data_frame$Java , mean)
meltExpensesByMonth <- melt(preferences_time_data_frame, id.vars=1:2)
head(meltExpensesByMonth)
head(preferences_time_data_frame)
reshape(preferences_time_data_frame)
reshape(preferences_time_data_frame,direction = “long”)
reshape(preferences_time_data_frame,direction ="long")
reshape(preferences_time_data_frame, varying ='test',direction = "long")
reshape(preferences_time_data_frame, varying ='test',direction = "long", idvar="preferences_time_data_frame$Courses_Completed")
reshape(preferences_time_data_frame, varying =c("Language"),direction = "long", idvar="preferences_time_data_frame$Courses_Completed")
reshape(preferences_time_data_frame, varying =c(2:6),direction = "long", idvar="preferences_time_data_frame$Courses_Completed")
reshape(preferences_time_data_frame, varying = c(2:6), direction = "long", idvar="preferences_time_data_frame$Courses_Completed")
reshape(preferences_time_data_frame, varying = c(2:6), direction = "long", idvar="preferences_time_data_frame$Courses_Completed", timevar=mean)
reshape(preferences_time_data_frame, varying = c(2:6), direction = "long", idvar="preferences_time_data_frame$Courses_Completed", timevar=order)
reshape(preferences_time_data_frame, varying = c(2:6), direction = "long", idvar="preferences_time_data_frame$Courses_Completed",  v.names=c("f", "u", "i","a","d"))
reshape(preferences_time_data_frame, varying = c(2:6), direction = "long", v.names=c("f", "u", "i","a","d"))
melt(preferences_time_data_frame, id.vars="Courses_Completed")
head(preferences_time_data_frame)
melt(preferences_time_data_frame, id.vars="Courses_Completed")
melt(preferences_time_data_frame, id.vars="Courses_Completed", variable.name="language")
help(melt)
melt(preferences_time_data_frame, id.vars="Courses_Completed", variable_name="language")
melt(preferences_time_data_frame, id.vars="Courses_Completed", variable_name="language", na.rm=TRUE)
melted_preferences_time_data_frame <- melt(preferences_time_data_frame, id.vars="Courses_Completed", variable_name="language", na.rm=TRUE)
melt(preferences_time_data_frame, id.vars="Courses_Completed", variable_name="language", na.rm=TRUE)
plot(x_range, y_range, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
colors <- rainbow(ntrees)
colors <- rainbow(melted_preferences_time_data_frame$language)
plot(x_range, y_range, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
colors <- rainbow(melted_preferences_time_data_frame$language)
linetype <- c(1:ntrees)
linetype <- c(1:melted_preferences_time_data_frame$language)
plotchar <- seq(18,18+ntrees,1)
plotchar <- seq(18,18+melted_preferences_time_data_frame$language,1)
plot(x_range, y_range, type="n", xlab="Age (days)",
ylab="Circumference (mm)" )
plot(x_range, y_range, type="n", xlab="Courses Completed",
ylab="Preference" )
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, value.var = "value")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ mean(language), value.var = "value")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, value.var = mean("value"))
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, value.var = "avg_ppo2")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, value.var = "value")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, fun.aggregate = TRUE, value.var = "value")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, fun.aggregate = "mean", value.var = "value")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, fun_ggregate = "mean", value.var = "value")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, fun_aggregate = "mean", value.var = "value")
help(dcast)
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, fun.aggregate = "mean", value.var = "value")
dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, mean, value.var = "value")
total_average_preferences <- dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, mean, value.var = "value")
total_average_preferences[-13, ]
total_average_preferences <- total_average_preferences[-13, ]
head(working_survey_input)
preferences_time <- c("Courses_Completed", "Java", "JavaScript", "Python", "R", "SAS")
preferences_time_data_frame <- working_survey_input[,preferences_time]
head(preferences_time_data_frame)
melted_preferences_time_data_frame <- melt(preferences_time_data_frame, id.vars="Courses_Completed", variable_name="language", na.rm=TRUE)
total_average_preferences <- dcast(melted_preferences_time_data_frame, Courses_Completed ~ language, mean, value.var = "value")
total_average_preferences <- total_average_preferences[-13, ]
total_average_preferences
library(matplot)
install.packages("matplot")
library(matplotlib)
install.packages("matplotlib")
help(plot)
melt(total_average_preferences)
melt(total_average_preferences,id.vars="Courses_Completed")
melt_total_average_preferences <- melt(total_average_preferences,id.vars="Courses_Completed")
melt_total_average_preferences <- melt(total_average_preferences,id.vars="Courses_Completed")
plot(melt_total_average_preferences)
plot(melt_total_average_preferences$variable)
melt_total_average_preferences
head(melt_total_average_preferences)
plot(melt_total_average_preferences$value)
head(total_average_preferences)
plot(total_average_preferences$Java,type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
plot(total_average_preferences$Java,type = "o",col = "red", xlab = "Courses Completed", ylab = "Preference",
main = "Language Preference by Year")
lines(total_average_preferences$JavaScript, type = "o", col = "blue")
plot(total_average_preferences$Java,type = "o",col = "red", xlab = "Courses Completed", ylab = "Preference",
main = "Language Preference by Year")
lines(total_average_preferences$JavaScript, type = "o", col = "blue")
lines(total_average_preferences$Python, type = "o", col = "blue")
lines(total_average_preferences$R, type = "o", col = "blue")
lines(total_average_preferences$SAS, type = "o", col = "blue")
source('C:/Users/00811289/Desktop/mspa_software_survey_case/assignment_1_ejr_code.R', echo=TRUE)
melt(total_average_preferences,id.vars="Courses_Completed")
help(plot)
elp(max)
help(max)
max(melt_total_average_preferences$value)
y_dim <- c(0,max(melt_total_average_preferences$value))
plot(total_average_preferences$Java,type = "o",col = "red", xlab = "Courses Completed", ylab = "Preference",
main = "Language Preference by Year", ylim=y_dim)
lines(total_average_preferences$JavaScript, type = "o", col = "blue")
lines(total_average_preferences$Python, type = "o", col = "blue")
lines(total_average_preferences$R, type = "o", col = "blue")
lines(total_average_preferences$SAS, type = "o", col = "blue")
melt_total_average_preferences <- melt(total_average_preferences,id.vars="Courses_Completed")
y_dim <- c(0,max(melt_total_average_preferences$value))
plot(total_average_preferences$Java,type = "o",col = HEX_PURPLE, xlab = "Courses Completed", ylab = "Preference",
main = "Language Preference by Year", ylim=y_dim)
lines(total_average_preferences$JavaScript, type = "o", col = HEX_BLUE)
lines(total_average_preferences$Python, type = "o", col = HEX_BLACK)
lines(total_average_preferences$R, type = "o", col = HEX_GREY)
lines(total_average_preferences$SAS, type = "o", col = HEX_RED)
plot(total_average_preferences$Java,type = "o", pch=15, col = HEX_PURPLE, xlab = "Courses Completed", ylab = "Preference",
main = "Language Preference by Year", ylim=y_dim)
plot(total_average_preferences$Java,type = "o", pch=15, col = HEX_PURPLE, xlab = "Courses Completed", ylab = "Preference",
main = "Language Preference by Year", ylim=y_dim)
lines(total_average_preferences$JavaScript, type = "o", pch=15, col = HEX_BLUE)
lines(total_average_preferences$Python, type = "o", pch=15, col = HEX_BLACK)
lines(total_average_preferences$R, type = "o", pch=15, col = HEX_GREY)
lines(total_average_preferences$SAS, type = "o", pch=15, col = HEX_RED)
legend(location="topright", legend=c("woo","ee"))
legend("topright", legend=c("woo","ee"))
legend("topright", legend=c("Java","JavaScript","Python","R","SAS"))
library(plyr)
library(ggplot2)
library(extrafont)
library(rworldmap)
Sys.setenv(R_GSCMD="C:/Program Files/gs/gs9.05/bin/gswin32c.exe")
# Hex codes according to our Style Guide as defined in Checkpoint B
HEX_BLUE <- "#17445F"
HEX_YELLOW <- "#F6F4C9"
HEX_TURQUOISE <- "#82BEB6"
HEX_EMERALD <- "#CCE6CB"
HEX_MENTHOL <- "#858A76"
HEX_LIGHT_BLUE <- "D6DDE8"
# Read files
setwd('C:/Users/00811289/Documents/github/pred-455/storm_events_data/locations/')
directory_location <- getwd()
file_names <- dir(directory_location)
locations <- NULL
for (file in file_names){
temp_locations <-read.table(file, header=TRUE, sep=",")
locations <- rbind(locations, temp_locations)
rm(temp_locations)
}
summary(locations)
head(locations)
locations$storm_year <- substr(locations$YEARMONTH,0,4)
# Attempt 3, panel
locations1[locations$storm_year == 1996] <- locations
yr2017 <- subset(locations, storm_year == 2017)
yr2010 <- subset(locations, storm_year == 2010)
yr2000 <- subset(locations, storm_year == 2000)
plot_yrs <- rbind(yr2017, yr2010, yr2000)
map <- get_map(location = c(-124.85,-65,23,49.39), zoom = 5, maptype="toner-lines")
mapPoints <- ggmap(map) +
geom_point(aes(x = LONGITUDE, y = LATITUDE), color=HEX_MENTHOL, data = plot_yrs, alpha = .05) +
scale_x_continuous(limits = c(-124.85,-65), expand = c(0, 0)) +
scale_y_continuous(limits = c(23,49.39), expand = c(0, 0)) +
ggtitle("Storm Locations Over Time") +
theme(legend.position="none")
mapPointsFacets <- mapPoints +   facet_grid(. ~ storm_year)
# plot the map
mapPointsFacets
map <- get_map(location = c(-124.85,24.39,-66.88,49.39), zoom = 2)
mapPoints <- ggmap(map) + geom_point(aes(x = LONGITUDE, y = LATITUDE, color=storm_year), data = locations, alpha = .2) +
scale_x_continuous(limits = c(-124.85,-50), expand = c(0, 0)) +
scale_y_continuous(limits = c(15,49.39), expand = c(0, 0))
mapPoints
# Attempt 3, panel
locations1[locations$storm_year == 1996] <- locations
yr2017 <- subset(locations, storm_year == 2017)
yr2010 <- subset(locations, storm_year == 2010)
yr2000 <- subset(locations, storm_year == 2000)
plot_yrs <- rbind(yr2017, yr2010, yr2000)
map <- get_map(location = c(-124.85,-65,23,49.39), zoom = 5, maptype="toner-lines")
mapPoints <- ggmap(map) +
geom_point(aes(x = LONGITUDE, y = LATITUDE), color=HEX_MENTHOL, data = plot_yrs, alpha = .05) +
scale_x_continuous(limits = c(-124.85,-65), expand = c(0, 0)) +
scale_y_continuous(limits = c(23,49.39), expand = c(0, 0)) +
ggtitle("Storm Locations Over Time") +
theme(legend.position="none")
mapPointsFacets <- mapPoints +   facet_grid(. ~ storm_year)
# plot the map
mapPointsFacets
# Second attempt with ggmap
library(ggmap)
newmap <- getMap(resolution = "low")
plot(newmap, xlim = c(-120, -70), ylim = c(22, 50), asp = 1)
points(locations$LONGITUDE, locations$LATITUDE, col = locations$storm_year, cex = .6)
# Second attempt with ggmap
library(ggmap)
#map <- get_map(location = 'America', zoom = 1)
map <- get_map(location = c(-124.85,24.39,-66.88,49.39), zoom = 2)
mapPoints <- ggmap(map) + geom_point(aes(x = LONGITUDE, y = LATITUDE, color=storm_year), data = locations, alpha = .2) +
scale_x_continuous(limits = c(-124.85,-50), expand = c(0, 0)) +
scale_y_continuous(limits = c(15,49.39), expand = c(0, 0))
mapPoints
# Attempt 3, panel
locations1[locations$storm_year == 1996] <- locations
yr2017 <- subset(locations, storm_year == 2017)
yr2010 <- subset(locations, storm_year == 2010)
yr2000 <- subset(locations, storm_year == 2000)
plot_yrs <- rbind(yr2017, yr2010, yr2000)
map <- get_map(location = c(-124.85,-65,23,49.39), zoom = 5, maptype="toner-lines")
mapPoints <- ggmap(map) +
geom_point(aes(x = LONGITUDE, y = LATITUDE), color=HEX_MENTHOL, data = plot_yrs, alpha = .05) +
scale_x_continuous(limits = c(-124.85,-65), expand = c(0, 0)) +
scale_y_continuous(limits = c(23,49.39), expand = c(0, 0)) +
ggtitle("Storm Locations Over Time") +
theme(legend.position="none")
mapPointsFacets <- mapPoints +   facet_grid(. ~ storm_year)
# plot the map
mapPointsFacets
map <- get_map(location = "united states", zoom = 5, maptype="toner-lines")
map <- get_map(location = "USA", zoom = 5, maptype="toner-lines")
ggmap(map)
map <- get_map(location = "USA", zoom = 2, maptype="toner-lines")
map <- get_map(location = "USA", zoom = 2, maptype="toner-lines")
map <- get_map(location = "USA", zoom = 3, maptype="toner-lines")
ggmap(map)
