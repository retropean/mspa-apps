# examine alternative layouts for plotting the top_enron_graph
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 10, vertex.color = "yellow",
vertex.label = NA, edge.arrow.size = 0.25,
layout = layout.fruchterman.reingold)
title("Fruchterman-Reingold Layout")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 10, vertex.color = "yellow",
vertex.label = NA, edge.arrow.size = 0.25,
layout = layout.kamada.kawai)
title("Kamada-Kawai Layout")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 10, vertex.color = "yellow",
vertex.label = NA, edge.arrow.size = 0.25,
layout = layout.circle)
title("Circle Layout")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 10, vertex.color = "yellow",
vertex.label = NA, edge.arrow.size = 0.25,
layout = layout.reingold.tilford)
title("Reingold-Tilford Layout")
# let's use the Kamada-Kawai layout for the labeled plot
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 15, vertex.color = "yellow",
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.kamada.kawai)
# a clique is a subset of nodes that are fully connected
# (links between all pairs of nodes in the subset)
# perform a census of cliques in the top_enron_graph
table(sapply(cliques(top_enron_graph), length))  # shows two large cliques
table(sapply(cliques(top_wiki_graph), length))  # shows two large cliques
?cliques
# construct the subgraph of the top K executives
top_enron_graph <- induced.subgraph(enron_graph, top_node_indices)
K <- 50
# identify a subset of K Enron executives based on e-mail-activity
top_node_indices <- sorted_node_reference_table$node_index[1:K]
print(top_node_indices)
# construct the subgraph of the top K executives
top_enron_graph <- induced.subgraph(enron_graph, top_node_indices)
# a clique is a subset of nodes that are fully connected
# (links between all pairs of nodes in the subset)
# perform a census of cliques in the top_enron_graph
table(sapply(cliques(top_enron_graph), length))  # shows two large cliques
# set up node reference table/data frame for later subgraph selection
node_index <- as.numeric(V(enron_graph))
V(enron_graph)$name <- node_name <- as.character(V(enron_graph))
node_name <- as.character(node_index)
node_reference_table <- data.frame(node_index, node_name)
# examine the degree of each node in the complete Enron e-mail network
# and add this measure (degree centrality) to the node reference table
node_reference_table$node_degree <- degree(enron_graph)
print(str(node_reference_table))
# sort the node reference table by degree and identify the indices
# of the most active nodes (those with the most links)
sorted_node_reference_table <-
node_reference_table[sort.list(node_reference_table$node_degree,
decreasing = TRUE),]
# check on the sort
print(head(sorted_node_reference_table))
print(tail(sorted_node_reference_table))
# select the top K executives... set K
K <- 50
# identify a subset of K Enron executives based on e-mail-activity
top_node_indices <- sorted_node_reference_table$node_index[1:K]
print(top_node_indices)
# construct the subgraph of the top K executives
top_enron_graph <- induced.subgraph(enron_graph, top_node_indices)
# a clique is a subset of nodes that are fully connected
# (links between all pairs of nodes in the subset)
# perform a census of cliques in the top_enron_graph
table(sapply(cliques(top_enron_graph), length))  # shows two large cliques
table(sapply(cliques(top_wiki_graph), length))
cliques(top_wiki_graph)
sapply(cliques(top_wiki_graph), length)
max_cliques(top_wiki_graph)
largest_cliques(top_wiki_graph)
table(sapply(cliques(top_wiki_graph), length))
# a clique is a subset of nodes that are fully connected
# (links between all pairs of nodes in the subset)
# perform a census of cliques in the top_enron_graph
table(sapply(cliques(top_enron_graph), length))  # shows two large cliques
two_cliques <- cliques(top_wiki_graph)[sapply(cliques(top_wiki_graph), length) == 7]
two_cliques
four_cliques <- cliques(top_wiki_graph)[sapply(cliques(top_wiki_graph), length) == 7]
# the two largest cliques have thirteen nodes/executives
# let's identify those cliques
two_cliques <-
cliques(top_enron_graph)[sapply(cliques(top_enron_graph), length) == 13]
# show the new index values for the top cliques... note the overlap
print(two_cliques)
four_cliques
core_node_indices_new <- unique(unlist(two_cliques))
non_core_node_indices_new <- setdiff(1:K, core_node_indices_new)
set_node_colors <- rep("white", length = K)
set_node_colors[core_node_indices_new] <- "darkblue"
set_label_colors <- rep("black", length = K)
set_label_colors[core_node_indices_new] <- "white"
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
plot(top_enron_graph, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.kamada.kawai)
plot(top_enron_graph, vertex.size = 15, vertex.color = "white",
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
layout = layout.reingold.tilford)  # node name 76?
K <- 20
top_node_indices <- sorted_node_reference_table$node_index[1:K]
print(top_node_indices)
# let's use the Kamada-Kawai layout for the labeled plot
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 15, vertex.color = "yellow",
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.kamada.kawai)
table(sapply(cliques(top_wiki_graph), length))
largest_cliques(top_wiki_graph)
four_cliques <- cliques(top_wiki_graph)[sapply(cliques(top_wiki_graph), length) == 7]
core_node_indices_new <- unique(unlist(four_cliques))
non_core_node_indices_new <- setdiff(1:K, core_node_indices_new)
set_node_colors <- rep("white", length = K)
set_node_colors[core_node_indices_new] <- "darkblue"
set_label_colors <- rep("black", length = K)
set_label_colors[core_node_indices_new] <- "white"
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
plot(top_wiki_graph, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.kamada.kawai)
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 15, vertex.color = "white",
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
layout = layout.reingold.tilford)  # node name 76?
plot(top_wiki_graph, vertex.size = 15, vertex.color = "white",
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
layout = layout.reingold.tilford)  # node name 76?
plot(top_wiki_graph, vertex.size = 15, vertex.color = "white",
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
layout = layout.reingold.tilford)  # node name 76?
plot(top_wiki_graph, vertex.size = 15, vertex.color = "white",
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
layout = layout.reingold.tilford)  # node name 76?
)
))
,
)
network.vertex.names(top_wiki_graph)[1]
typeof(top_wiki_graph)
network.vertex.names(top_wiki_graph)[920]
network.vertex.names(wiki_net)[920]
network.vertex.names(wiki_net)[129]
network.vertex.names(wiki_net)[341]
network.vertex.names(wiki_net)[31166]
network.vertex.names(wiki_net)[1166]
network.vertex.names(wiki_net)[2709]
network.vertex.names(wiki_net)[1879]
network.vertex.names(wiki_net)[1815]
network.vertex.names(wiki_net)[1308]
network.vertex.names(wiki_net)[1267]
network.vertex.names(wiki_net)[3886]
network.vertex.names(wiki_net)[3300]
network.vertex.names(wiki_net)[3886]
network.vertex.names(wiki_net)[1532]
plot(top_wiki_graph, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.kamada.kawai)
network.vertex.names(wiki_net)[1166]
network.vertex.names(wiki_net)[4109]
network.vertex.names(wiki_net)[1879]
network.vertex.names(wiki_net)[341]
,
# Set top 10 articles
K <- 10
top_node_indices <- sorted_node_reference_table$node_index[1:K]
print(top_node_indices)
# check on the sort, looks like USA #1! Followed by Europe, UK and Earth
print(head(sorted_node_reference_table))
wiki_net <- network(as.matrix(links_cleaned), matrix.type = "edgelist", directed = TRUE, multiple = TRUE)
#wiki_net2 <- network(as.matrix(links_cleaned), matrix.type = "edgelist", directed = TRUE, multiple = TRUE)
wiki_graph <- asIgraph(wiki_net)
# set up node reference table/data frame for later subgraph selection
node_index <- as.numeric(V(wiki_graph))
V(wiki_graph)$name <- node_name <- as.character(V(wiki_graph))
# Key for vertex names
vertex_names <- (network.vertex.names(wiki_net))
vertex_name_df <- data.frame(node_name=0, name=0)
y <- 0
while (y < length(vertex_names)){
vertex_name_df[nrow(vertex_name_df) + 1,] <- c(y,vertex_names[y])
y <- y+1
}
node_name <- as.character(node_index)
node_reference_table <- data.frame(node_index, node_name)
node_1 <- induced.subgraph(wiki_graph, neighborhood(wiki_graph, order = 1, nodes = 1)[[1]])
# Check name of node 1
network.vertex.names(wiki_net)[1] #"%C3%85land"
# add number of adjacent edges
node_reference_table$node_degree <- degree(wiki_graph)
print(str(node_reference_table))
# Finally added in variable names
ultimate_reference <- merge(node_reference_table, vertex_name_df, by="node_name")
sorted_node_reference_table <-
ultimate_reference[sort.list(ultimate_reference$node_degree,
decreasing = TRUE),]
# check on the sort, looks like USA #1! Followed by Europe, UK and Earth
print(head(sorted_node_reference_table))
K <- 10
top_node_indices <- sorted_node_reference_table$node_index[1:K]
print(top_node_indices)
top_wiki_graph <- induced.subgraph(wiki_graph, top_node_indices)
top_wiki_graph
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 10, vertex.color = "yellow",
vertex.label = NA, edge.arrow.size = 0.25,
layout = layout.fruchterman.reingold)
title("Fruchterman-Reingold Layout")
table(sapply(cliques(top_wiki_graph), length))
table(sapply(cliques(top_wiki_graph), length))
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 10, vertex.color = "yellow",
vertex.label = NA, edge.arrow.size = 0.25,
layout = layout.kamada.kawai)
title("Kamada-Kawai Layout")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph, vertex.size = 10, vertex.color = "yellow",
vertex.label = NA, edge.arrow.size = 0.25,
layout = layout.fruchterman.reingold)
title("Fruchterman-Reingold Layout")
plot(top_wiki_graph,
vertex.size = 10,
vertex.color = "yellow",
#     vertex.label = NA,
vertex.label.cex = 0.9,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Fruchterman-Reingold Layout")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph,
vertex.size = 10,
vertex.color = "yellow",
#     vertex.label = NA,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Fruchterman-Reingold Layout")
plot(top_wiki_graph,
vertex.size = 15,
vertex.color = "yellow",
#     vertex.label = NA,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Fruchterman-Reingold Layout")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph,
vertex.size = 15,
vertex.color = "orange",
#     vertex.label = NA,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
# Check name of node 1
network.vertex.names(top_wiki_graph)
top_wiki_graph
top_wiki_graph.name
top_wiki_graph.vertex.names
unlist(top_wiki_graph)
View(top_wiki_graph)
?induced.subgrpah
?induced.subgraph
wiki_net
wiki_graph_test <- asIgraph(wiki_net, vertices=network.vertex.names(wiki_net))
wiki_graph_test <- asIgraph(wiki_net, vertices=network.vertex.names)
wiki_graph_test <- asIgraph(wiki_net, vertices=vertex.names)
igraph.vertex(wiki_net)[1]
igraph.vertex(wiki_graph)[1]
igraph.names(wiki_graph)[1]
igraph.names(wiki_graph)
igraph.name(wiki_graph)
set.seed(9999)  # for reproducible results
plot(top_wiki_graph,
vertex.size = 15,
vertex.color = "orange",
#     vertex.label = NA,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
v(top_wiki_graph)
V(top_wiki_graph)
V(top_wiki_graph)$name
summary(top_wiki_graph)
V(top_wiki_graph)$vertex.names
set.seed(9999)  # for reproducible results
plot(top_wiki_graph,
vertex.size = 15,
vertex.color = "orange",
vertex.label = V(top_wiki_graph)$vertex.names,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph,
vertex.size = 15,
vertex.color = "orange",
vertex.label = V(top_wiki_graph)$vertex.names,
vertex.label.color = "black",
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
K <- 30
top_node_indices_larger <- sorted_node_reference_table$node_index[1:K]
print(top_node_indices)
top_wiki_graph_larger <- induced.subgraph(wiki_graph, top_node_indices_larger)
# examine alternative layouts for plotting the top_enron_graph
set.seed(9999)  # for reproducible results
plot(top_wiki_graph_larger,
vertex.size = 15,
vertex.color = "orange",
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.color = "black",
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
# Set top 10 articles
K <- 50
top_node_indices_larger <- sorted_node_reference_table$node_index[1:K]
print(top_node_indices)
top_wiki_graph_larger <- induced.subgraph(wiki_graph, top_node_indices_larger)
# examine alternative layouts for plotting the top_enron_graph
set.seed(9999)  # for reproducible results
plot(top_wiki_graph_larger,
vertex.size = 15,
vertex.color = "orange",
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.color = "black",
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
core_node_indices_new <- unique(unlist(top_wiki_graph))
non_core_node_indices_new <- setdiff(1:K, core_node_indices_new)
set_node_colors <- rep("white", length = K)
set_node_colors[core_node_indices_new] <- "darkblue"
core_node_indices_new <- unique(unlist(top_node_indices))
non_core_node_indices_new <- setdiff(1:K, core_node_indices_new)
set_node_colors <- rep("white", length = K)
set_node_colors[core_node_indices_new] <- "darkblue"
set_label_colors <- rep("black", length = K)
set_label_colors[core_node_indices_new] <- "white"
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
plot(top_wiki_graph_larger, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.kamada.kawai)
non_core_node_indices_new
core_node_indices_new
set_node_colors
?setdiff
top_node_indices
core_node_indices_new <- unique(unlist(top_node_indices))
non_core_node_indices_new <- setdiff(1:K, core_node_indices_new)
set_node_colors <- rep("white", length = K)
set_node_colors
set_node_colors[core_node_indices_new] <- "darkblue"
set_node_colors
set_node_colors[core_node_indices_new]
set_node_colors
core_node_indices_new
core_node_indices_new <- (top_node_indices)
non_core_node_indices_new <- setdiff(1:K, core_node_indices_new)
set_node_colors <- rep("white", length = K)
set_node_colors[core_node_indices_new] <- "darkblue"
set_node_colors
top_node_indices
non_core_node_indices_new <- setdiff(1:K, top_node_indices)
non_core_node_indices_new
set_node_colors[top_node_indices] <- "white"
set_node_colors[core_node_indices_new] <- "darkblue"
set_node_colors
top_node_indices_larger
core_node_indices_new <- (top_node_indices)
non_core_node_indices_new <- setdiff(1:K, top_node_indices)
set_node_colors[top_node_indices] <- "white"
set_node_colors[top_node_indices_larger] <- "darkblue"
set_node_colors
top_node_indices_larger
top_node_indices
set_node_colors <- NULL
set_node_colors[top_node_indices] <- "white"
set_node_colors[top_node_indices_larger] <- "darkblue"
set_node_colors
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
plot(top_wiki_graph_larger, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.fruchterman.reingold)
core_node_indices_new <- (top_node_indices)
non_core_node_indices_new <- setdiff(1:K, top_node_indices)
set_node_colors <- NULL
set_node_colors[top_node_indices] <- "white"
set_node_colors[top_node_indices_larger] <- "darkblue"
set_label_colors[top_node_indices] <- "black"
set_label_colors[top_node_indices_larger] <- "white"
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
plot(top_wiki_graph_larger, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.fruchterman.reingold)
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
plot(top_wiki_graph_larger, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.fruchterman.reingold)
core_node_indices_new <- (top_node_indices)
non_core_node_indices_new <- setdiff(1:K, top_node_indices)
set_node_colors <- NULL
set_node_colors[top_node_indices_larger] <- "darkblue"
set_node_colors[top_node_indices] <- "white"
set_label_colors[top_node_indices_larger] <- "white"
set_label_colors[top_node_indices] <- "black"
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
plot(top_wiki_graph_larger, vertex.size = 15,
vertex.color = set_node_colors,
vertex.label.color = set_label_colors,
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.cex = 0.9, edge.arrow.size = 0.25,
edge.color = "darkgray", layout = layout.fruchterman.reingold)
top_node_indices
set_node_colors
set.seed(9999)  # for reproducible results
plot(top_wiki_graph_larger,
vertex.size = 15,
vertex.color = "orange",
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.color = set_label_colors,
vertex.color = set_node_colors,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
set.seed(9999)  # for reproducible results
plot(top_wiki_graph_larger,
vertex.size = 15,
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.color = set_label_colors,
vertex.color = set_node_colors,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
top_node_indices_larger
top_node_indices
top_node_indices_larger[,10]
top_node_indices_larger[1:10]
top_node_indices_larger[11:50]
set_node_colors <- NULL
set_node_colors[top_node_indices_larger[11:50]] <- "darkblue"
set_node_colors[top_node_indices_larger[1:10]] <- "white"
set_label_colors[top_node_indices_larger] <- "white"
set_label_colors[top_node_indices] <- "black"
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
set.seed(9999)  # for reproducible results
plot(top_wiki_graph_larger,
vertex.size = 15,
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.color = set_label_colors,
vertex.color = set_node_colors,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
set_node_colors <- NULL
set_node_colors[top_node_indices_larger[11:50]] <- "darkblue"
set_node_colors[top_node_indices_larger[1:10]] <- "orange"
set_label_colors[top_node_indices_larger] <- "white"
set_label_colors[top_node_indices] <- "black"
set.seed(9999)  # for reproducible results
#pdf(file = "fig_top_enron_graph_with_core.pdf", width = 8.5, height = 11)
set.seed(9999)  # for reproducible results
plot(top_wiki_graph_larger,
vertex.size = 15,
vertex.label = V(top_wiki_graph_larger)$vertex.names,
vertex.label.color = set_label_colors,
vertex.color = set_node_colors,
vertex.label.cex = 0.5,
edge.arrow.size = 0.15,
layout = layout.fruchterman.reingold)
title("Top 10 Wikipedia Articles")
top_wiki_graph_larger
V(top_wiki_graph_larger)$vertex.names
V(top_wiki_graph_larger)$vertex
V(top_wiki_graph_larger)
